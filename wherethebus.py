from aiogram import Router
from aiogram.types import Message
from datetime import datetime
import json
from config import bot

router = Router()


@router.message()
async def wherethebus(message: Message):
    await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id)
    '''–ü—Ä–∏–≤–æ–¥–∏–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω—É–∂–Ω–æ–º—É –Ω–∞–º —Ñ–æ—Ä–º–∞—Ç—É.'''
    name_of_station = message.text.capitalize().replace('"', '').replace('¬´', '').replace('¬ª', '')
    '''–°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ'''
    time_now = datetime.now().strftime('%H:%M:%S')
    day_today = datetime.today().weekday()
    output_text = f'–ö –æ—Å—Ç–∞–Ω–æ–≤–∫–µ {message.text} —Å–∫–æ—Ä–æ –ø–æ–¥–æ–π–¥—É—Ç –º–∞—Ä—à—Ä—É—Ç—ã:\n'
    try:
        with open('Norilsk_numbers_of_route.json', 'r', encoding='utf-8') as f:
            data = json.load(f)
            if name_of_station in data:
                routes = data[name_of_station]
            else:
                return message.answer(
                    f'–°—Ç–∞–Ω—Ü–∏–∏ {name_of_station} –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.üõÑ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ–Ω–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ,'
                    f' –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ –≤ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–∏–º–≤–æ–ª–∞ ‚Ññ —Å—Ç–æ—è—Ç —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω.üîÉ'
                )
    except FileNotFoundError:
        return message.answer(
            '‚ÅâÔ∏è–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–¥ –æ—à–∏–±–∫–∏: 1. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º.'
        )
    try:
        with open('Norilsk_routes.json', 'r') as f:
            data = json.load(f)
            if day_today == 6 or day_today == 5:
                today = 'Weekend'
            else:
                today = 'Weekday'
            '''–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ'''
            for route in routes:
                try:
                    time_lst = data[today][route][name_of_station]
                except KeyError:
                    continue
                except Exception as error:
                    return message.answer(
                        '‚ÅâÔ∏è–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–¥ –æ—à–∏–±–∫–∏: 3. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º.'
                    )
                flag_new_day = False
                for i, time_without_mod in enumerate(time_lst):
                    h, m, s = time_without_mod.split(':')
                    if len(h) == 1: h = '0' + h
                    if len(m) == 1: m = '0' + m
                    if len(s) == 1: s = '0' + s
                    time = ':'.join([h, m, s])
                    if i != 0:
                        if time < time_lst[i - 1]:
                            flag_new_day = True
                    if time_now >= time is True and flag_new_day is True:
                        if i + 1 == len(time_lst):
                            j = 0
                        else:
                            j = i + 1
                        output_text += f'\nüöç{route}: –±–ª–∏–∂–∞–π—à–∏–π –∞–≤—Ç–æ–±—É—Å –ø–æ–¥–æ–π–¥—ë—Ç –≤ {time}.' \
                                       f'\nüöå–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å —ç—Ç–æ–≥–æ –∂–µ –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ–¥–æ–π–¥—ë—Ç –≤ {time_lst[j]}\n'
                        break
                    elif time_now < time:
                        if i + 1 == len(time_lst):
                            j = 0
                        else:
                            j = i + 1
                        output_text += f'\nüöç{route}: –±–ª–∏–∂–∞–π—à–∏–π –∞–≤—Ç–æ–±—É—Å –ø–æ–¥–æ–π–¥—ë—Ç –≤ {time}.' \
                                       f'\nüöå–°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–±—É—Å —ç—Ç–æ–≥–æ –∂–µ –º–∞—Ä—à—Ä—É—Ç–∞ –ø–æ–¥–æ–π–¥—ë—Ç –≤ {time_lst[j]}\n'
                        break
        if output_text == f'–ö –æ—Å—Ç–∞–Ω–æ–≤–∫–µ {message.text} —Å–∫–æ—Ä–æ –ø–æ–¥–æ–π–¥—É—Ç –º–∞—Ä—à—Ä—É—Ç—ã:\n':
            output_text = f'–í –±–ª–∏–∂–∞–π—à–∏–µ 30 —á–∞—Å–æ–≤ –∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ {message.text} –Ω–µ –ø—Ä–∏–±—É–¥–µ—Ç' \
                          f' –Ω–∏ –æ–¥–∏–Ω –∞–≤—Ç–æ–±—É—Å.üöï\n–ï—Å–ª–∏ —è –æ—à–∏–±–∞—é—Å—å - –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.'
        await message.answer(
            text=output_text
        )

    except Exception as error:
        return message.answer(
            '‚ÅâÔ∏è–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–¥ –æ—à–∏–±–∫–∏: 2. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–± —ç—Ç–æ–º.'
        )
